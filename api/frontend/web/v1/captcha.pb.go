// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: v1/captcha.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Captcha 验证码
type GetCaptcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetCaptcha) Reset() {
	*x = GetCaptcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_captcha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaptcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptcha) ProtoMessage() {}

func (x *GetCaptcha) ProtoReflect() protoreflect.Message {
	mi := &file_v1_captcha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptcha.ProtoReflect.Descriptor instead.
func (*GetCaptcha) Descriptor() ([]byte, []int) {
	return file_v1_captcha_proto_rawDescGZIP(), []int{0}
}

type GetCaptchaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B64  string `protobuf:"bytes,1,opt,name=b64,proto3" json:"b64,omitempty"`
	Tb64 string `protobuf:"bytes,2,opt,name=tb64,proto3" json:"tb64,omitempty"`
	Cid  string `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *GetCaptchaReply) Reset() {
	*x = GetCaptchaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_captcha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCaptchaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCaptchaReply) ProtoMessage() {}

func (x *GetCaptchaReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_captcha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCaptchaReply.ProtoReflect.Descriptor instead.
func (*GetCaptchaReply) Descriptor() ([]byte, []int) {
	return file_v1_captcha_proto_rawDescGZIP(), []int{1}
}

func (x *GetCaptchaReply) GetB64() string {
	if x != nil {
		return x.B64
	}
	return ""
}

func (x *GetCaptchaReply) GetTb64() string {
	if x != nil {
		return x.Tb64
	}
	return ""
}

func (x *GetCaptchaReply) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type VerifyCaptcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid         string `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	VerifyValue string `protobuf:"bytes,2,opt,name=verify_value,json=verifyValue,proto3" json:"verify_value,omitempty"` // 验证码
}

func (x *VerifyCaptcha) Reset() {
	*x = VerifyCaptcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_captcha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCaptcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCaptcha) ProtoMessage() {}

func (x *VerifyCaptcha) ProtoReflect() protoreflect.Message {
	mi := &file_v1_captcha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCaptcha.ProtoReflect.Descriptor instead.
func (*VerifyCaptcha) Descriptor() ([]byte, []int) {
	return file_v1_captcha_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyCaptcha) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *VerifyCaptcha) GetVerifyValue() string {
	if x != nil {
		return x.VerifyValue
	}
	return ""
}

type VerifyCaptchaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *VerifyCaptchaReply) Reset() {
	*x = VerifyCaptchaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_captcha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyCaptchaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyCaptchaReply) ProtoMessage() {}

func (x *VerifyCaptchaReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_captcha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyCaptchaReply.ProtoReflect.Descriptor instead.
func (*VerifyCaptchaReply) Descriptor() ([]byte, []int) {
	return file_v1_captcha_proto_rawDescGZIP(), []int{3}
}

func (x *VerifyCaptchaReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VerifyCaptchaReply) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_v1_captcha_proto protoreflect.FileDescriptor

var file_v1_captcha_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x22, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x36, 0x34, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x62, 0x36, 0x34,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x62, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x44,
	0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x32, 0xe3, 0x01, 0x0a, 0x07, 0x43, 0x61, 0x70,
	0x74, 0x43, 0x68, 0x61, 0x12, 0x65, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x1a, 0x24, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x71, 0x0a, 0x06, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x42, 0x1e,
	0x5a, 0x1c, 0x76, 0x68, 0x72, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_captcha_proto_rawDescOnce sync.Once
	file_v1_captcha_proto_rawDescData = file_v1_captcha_proto_rawDesc
)

func file_v1_captcha_proto_rawDescGZIP() []byte {
	file_v1_captcha_proto_rawDescOnce.Do(func() {
		file_v1_captcha_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_captcha_proto_rawDescData)
	})
	return file_v1_captcha_proto_rawDescData
}

var file_v1_captcha_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_captcha_proto_goTypes = []interface{}{
	(*GetCaptcha)(nil),         // 0: api.frontend.web.v1.GetCaptcha
	(*GetCaptchaReply)(nil),    // 1: api.frontend.web.v1.GetCaptchaReply
	(*VerifyCaptcha)(nil),      // 2: api.frontend.web.v1.VerifyCaptcha
	(*VerifyCaptchaReply)(nil), // 3: api.frontend.web.v1.VerifyCaptchaReply
}
var file_v1_captcha_proto_depIdxs = []int32{
	0, // 0: api.frontend.web.v1.CaptCha.Get:input_type -> api.frontend.web.v1.GetCaptcha
	2, // 1: api.frontend.web.v1.CaptCha.Verify:input_type -> api.frontend.web.v1.VerifyCaptcha
	1, // 2: api.frontend.web.v1.CaptCha.Get:output_type -> api.frontend.web.v1.GetCaptchaReply
	3, // 3: api.frontend.web.v1.CaptCha.Verify:output_type -> api.frontend.web.v1.VerifyCaptchaReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_captcha_proto_init() }
func file_v1_captcha_proto_init() {
	if File_v1_captcha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_captcha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCaptcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_captcha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCaptchaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_captcha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCaptcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_captcha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyCaptchaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_captcha_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_captcha_proto_goTypes,
		DependencyIndexes: file_v1_captcha_proto_depIdxs,
		MessageInfos:      file_v1_captcha_proto_msgTypes,
	}.Build()
	File_v1_captcha_proto = out.File
	file_v1_captcha_proto_rawDesc = nil
	file_v1_captcha_proto_goTypes = nil
	file_v1_captcha_proto_depIdxs = nil
}
